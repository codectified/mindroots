LOAD CSV WITH HEADERS FROM 'file:///roots.csv' AS row
MERGE (root:Root {root_id: toInteger(row.id), arabic: row.`الجذور`, english: row.transliterated_root, r3: row.r3, r2: row.r2, r1: row.r1})

LOAD CSV WITH HEADERS FROM 'file:///forms.csv' AS row
MERGE (form:Form {form_id: toInteger(row.id), arabic: row.arabic, english: row.english})

// Load the derivatives and link them to names of Allah by name_id
LOAD CSV WITH HEADERS FROM 'file:///derivatives.csv' AS row
WITH row
MERGE (word:Word {word_id: toInteger(row.id), arabic: row.arabic, english: row.english})
SET word.name_id = toInteger(row.name_id)
WITH row, word
MATCH (root:Root {root_id: toInteger(row.root_id)})
MERGE (root)-[:HAS_WORD]->(word)
SET word.root_id = root.root_id  // Include root_id in word properties
WITH row, word
WITH word, split(replace(replace(row.form_id, '[', ''), ']', ''), ',') AS form_ids
UNWIND form_ids AS form_id
MATCH (form:Form {form_id: toInteger(form_id)})
MERGE (word)-[:HAS_FORM]->(form)


// Load the most excellent names (corpus items)
LOAD CSV WITH HEADERS FROM 'file:///most_excellent_names.csv' AS row
WITH row 
WHERE row.`أسماء_الله_الحسنى` IS NOT NULL AND row.id IS NOT NULL
MERGE (name:NameOfAllah {name_id: toInteger(row.id), corpus_id: toInteger(row.corpus_id), arabic: row.`أسماء_الله_الحسنى`, transliteration: row.transliteration, english: row.the_most_excellent_names})

// Load the Quran corpus (corpus items)
LOAD CSV WITH HEADERS FROM 'file:///quran.csv' AS row
WITH row 
WHERE row.word IS NOT NULL AND row.id IS NOT NULL
MERGE (item:Quran {item_id: toInteger(row.id), corpus_id: toInteger(row.corpus_id), word: row.word})

// Load the mapping table to link derivatives to corpus items
LOAD CSV WITH HEADERS FROM 'file:///mapping.csv' AS row
WITH row
MATCH (word:Word {word_id: toInteger(row.derivative_id)})
MATCH (name:NameOfAllah {name_id: toInteger(row.item_id), corpus_id: toInteger(row.corpus_id)})
MERGE (name)-[:HAS_WORD]->(word)
WITH row
MATCH (item:Quran {item_id: toInteger(row.item_id), corpus_id: toInteger(row.corpus_id)})
MERGE (item)-[:HAS_WORD]->(word)

// Load corpora nodes
LOAD CSV WITH HEADERS FROM 'file:///corpora.csv' AS row
MERGE (corpus:Corpus {corpus_id: toInteger(row.id), name: row.name});

// Link names of Allah to Corpus 1 (The Most Excellent Names)
MATCH (name:NameOfAllah), (corpus:Corpus {corpus_id: 1})
MERGE (name)-[:BELONGS_TO]->(corpus);
